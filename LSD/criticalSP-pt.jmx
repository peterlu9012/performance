<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="STG2UAT Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="db_ip" elementType="Argument">
            <stringProp name="Argument.name">db_ip</stringProp>
            <stringProp name="Argument.value">172.16.15.106:1433</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="commissionDbName" elementType="Argument">
            <stringProp name="Argument.name">commissionDbName</stringProp>
            <stringProp name="Argument.value">Commissions_Pulse</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="STG2 Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="db_ip" elementType="Argument">
            <stringProp name="Argument.name">db_ip</stringProp>
            <stringProp name="Argument.value">172.16.15.105:1433</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="commissionDbName" elementType="Argument">
            <stringProp name="Argument.name">commissionDbName</stringProp>
            <stringProp name="Argument.value">Commissions</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="RFOperations_perftest" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">500000</stringProp>
        <stringProp name="dataSource">RFOperations_db</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://${db_ip};DatabaseName=RFOperations</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">perftest</stringProp>
        <stringProp name="poolMax">1500</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">perftest</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="Commissions_perftest" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">Select 1</stringProp>
        <stringProp name="connectionAge">500000</stringProp>
        <stringProp name="dataSource">Commissions_db</stringProp>
        <stringProp name="dbUrl">jdbc:sqlserver://${db_ip};DatabaseName=${commissionDbName}</stringProp>
        <stringProp name="driver">com.microsoft.sqlserver.jdbc.SQLServerDriver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">perftest</stringProp>
        <stringProp name="poolMax">1500</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">perftest</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="whitelist" enabled="true">
        <stringProp name="filename">\data\load-wave-000032_.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">email,accountID</stringProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">true</boolProp>
        <boolProp name="recycle">false</boolProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1469552659000</longProp>
        <longProp name="ThreadGroup.end_time">1469552659000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RFO GetAccount" enabled="false"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[RFO_Accounts].[usp_Account_Get]" enabled="true">
            <stringProp name="dataSource">RFOperations_db</stringProp>
            <stringProp name="queryType">Callable Statement</stringProp>
            <stringProp name="query">EXEC [RFOperations].[RFO_Accounts].[usp_Account_Get]
@AccountId = &apos;&apos;,
@EmailAddress = &apos;${email}&apos;,
@UserName = &apos;&apos;,
@SecuredTaxNumber = &apos;&apos;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">AccountID</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RFO GetKpiInfo" enabled="true">
          <stringProp name="TestPlan.comments">dependant on accountID</stringProp>
        </GenericController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[${commissionDbName}].[pulse].[RPTKPIinfo]" enabled="true">
            <stringProp name="dataSource">Commissions_db</stringProp>
            <stringProp name="queryType">Callable Statement</stringProp>
            <stringProp name="query">EXEC [${commissionDbName}].[pulse].[RPTKPIinfo]
@PERIODID_IN = ${__time(YYYYMM)},
@ACCOUNTID_IN = ${accountID}</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">AccountID,AccountNumber,AccountStatusCode,,CountryName,AccountTypeCode,TimeZoneCode,LanguageCode,CurrencyCode,CurrencyName,AccountTypeCode,TimeZoneID,LanguageId,LanguageName,ServerModifiedDate,AccountContactId,AccountContactTypeId,DisplayTaxNumber,SecuredTaxNumber,FirstName,MiddleNAme,LastName,LegalName,NickName,GenderId,Birthday,SponsorId,EnrollerId,EnrollmentDate,SoftTerminationDate,HardTerminationDate,Active,IsTaxExempt,IsBusinessEntity,LastRenewalDate,EmailAddressID,EmailAddressTypeID,EmailProfileName,EmailAddress,EffectiveDate,IsDefault,PhoneID,PhoneTypeID,PhoneProfileName,AreaCode,Number,PhoneNumberRaw,PhoneNumberFormatted,MobilePhoneID,MobilePhoneTypeID,MobilePhoneProfileName,MobileCountryCode,MobileAreaCode,MobileNumber,MobilePhoneNumberRaw,MobilePhoneNumberFormatted,AddressId,AddressProfileName,AddressLine1,AddressLine2,AddressLine3,AddressLine4,AddressLine5,PostalCode,Locale,SubRegion,Region,LastAutoAssignmenDate,CoApplicant,PersonalPhotoUrl,Username,Password,SponsorAccountNumber,SponsorName,EnrollerAccountNumber,EnrollerName,StartEnrollmentTypeCode,StartSourceTypeCode,StartDeviceTypeCode,EndEnrollmentTypeCode,EndDeviceTypeCode,SponsorSearchTypeCode,CRPShipDateCode,EnrolledWithCRPCode,EnrolledWithPulseCode,TermsAndConditionsCode,MainAddressPhoneId,MainAddressPhoneTypeID,MainAddressPhoneProfileName,MainAddressCountryCode,MainAddressAreaCode,MainAddressNumber,MainAddressPhoneNumberRaw,MainAddressPhoneNumberFormatted,MainAddressIsDefault</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RFO GetComissionOrderHistoryView" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[${commissionDbName}].[pulse].[rptOrdersView]" enabled="true">
            <stringProp name="dataSource">Commissions_db</stringProp>
            <stringProp name="queryType">Callable Statement</stringProp>
            <stringProp name="query">EXEC [${commissionDbName}].[pulse].[rptOrdersView]
@SponsorId = ${accountID},
@PeriodId = ${__time(YYYYMM)}</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">,,FirstName,LastName,,AccountTypeName,CountryCode,CurrencyCode,AccountID,SponsorId,EnrollerId,AccountType,OrderID,,ReturnOrderID,ReturnOrderNumber,ReturnOrder,OrderTypeId,OrderStatusID,CommissionDate,CompletionDate,QVDescription,QV,,,AutoshipID,AutoshipTypeID,,</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Count Records</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="RFO GetLsdKpiInfo" enabled="true"/>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="[${commissionDbName}].[pulse].[rptLSD_KPI_InfoByLevelAndAccountType]" enabled="true">
            <stringProp name="dataSource">Commissions_db</stringProp>
            <stringProp name="queryType">Callable Statement</stringProp>
            <stringProp name="query">EXEC [${commissionDbName}].[pulse].[rptLSD_KPI_InfoByLevelAndAccountType]
@SponsorId=${accountID},
@PeriodId=201607,
@Level=1,
@AccountTypeId=1</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">true</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
